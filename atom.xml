<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>景庄</title>
  <icon>https://wwsun.github.io/icon.png</icon>
  
  <link href="https://wwsun.github.io/atom.xml" rel="self"/>
  
  <link href="https://wwsun.github.io/"/>
  <updated>2025-05-31T04:40:44.041Z</updated>
  <id>https://wwsun.github.io/</id>
  
  <author>
    <name>wwsun</name>
    <email>ww.sun@outlook.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>编程模型选择最佳实践</title>
    <link href="https://wwsun.github.io/2025/04/21/ai-code-model/"/>
    <id>https://wwsun.github.io/2025/04/21/ai-code-model/</id>
    <published>2025-04-20T16:00:00.000Z</published>
    <updated>2025-05-31T04:40:44.041Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;目前，开发者利用大模型和 AI 辅助编程工具来加速编码过程的选择越来越多。随着大模型技术的快速发展，模型的更新和发布速度也在不断加快，例如今年发布的 Claude Sonnet 3.7 和</summary>
        
      
    
    
    
    
    <category term="AI Code" scheme="https://wwsun.github.io/tags/AI-Code/"/>
    
  </entry>
  
  <entry>
    <title>深入解读 JavaScript 中的面向对象编程</title>
    <link href="https://wwsun.github.io/2017/06/19/javascript-oop/"/>
    <id>https://wwsun.github.io/2017/06/19/javascript-oop/</id>
    <published>2017-06-18T16:00:00.000Z</published>
    <updated>2025-05-31T03:23:14.900Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;面向对象编程是用抽象方式创建基于现实世界模型的一种编程模式，主要包括模块化、多态、和封装几种技术。&lt;br&gt;对 JavaScript 而言，其核心是支持面向对象的，同时它也提供了强大灵活的基于原型的面向对象编程能力。&lt;br&gt;本文将会深入的探讨有关使用 JavaScript</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Node.js Stream</title>
    <link href="https://wwsun.github.io/2017/06/18/node-stream/"/>
    <id>https://wwsun.github.io/2017/06/18/node-stream/</id>
    <published>2017-06-17T16:00:00.000Z</published>
    <updated>2025-05-31T03:23:14.901Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;流是Node.js中一个非常重要的概念，也是Node.js之所以&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
